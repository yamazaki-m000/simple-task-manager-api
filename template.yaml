AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Simple Task Manager API

Globals:
  Function:
    Runtime: python3.7
    Timeout: 29
    Environment:
      Variables:
        TABLE_NAME: data-table

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: simple-task-manager-api
      StageName: prd
      EndpointConfiguration: REGIONAL
      Cors:
        AllowMethods: "'POST,GET,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
#      Domain:
#        DomainName: www.my-domain.com
#        CertificateArn: my-valid-cert-arn
#        EndpointConfiguration: EDGE

#  HelloWorldFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: src/tasks
#      Handler: app.get_tasks
#      Events:
#        HelloWorld:
#          Type: Api
#          Properties:
#            RestApiId: !Ref Api
#            Path: /hello
#            Method: get

  GetTasksFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-tasks-function
      Handler: index.lambda_handler
      InlineCode: |
        import json
        def lambda_handler(event, context):
          return {
            "statusCode": 200,
            "body": json.dumps({
              "taskList": [
                {
                  "id": 1,
                  "taskName": "aa",
                  "taskDetail": "bbb",
                  "status": 0,
                  "priority": 2,
                },
                {
                  "id": 2,
                  "taskName": "cc",
                  "taskDetail": "",
                  "status": 0,
                  "priority": 3,
                },
                {
                  "id": 3,
                  "taskName": "ddd",
                  "taskDetail": "eee",
                  "status": 0,
                  "priority": 1,
                }
              ]
            })
          }
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /tasks
            Method: get

  CreateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: create-task-function
      Handler: index.lambda_handler
      InlineCode: |
        import json
        def lambda_handler(event, context):
          return {
            "statusCode": 200,
            "body": {}
          }
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /tasks
            Method: post

  UpdateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: update-task-function
      Handler: index.lambda_handler
      InlineCode: |
        import json
        def lambda_handler(event, context):
          return {
            "statusCode": 200,
            "body": {}
          }
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /tasks/{id}
            Method: put

  DeleteTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: delete-task-function
      Handler: index.lambda_handler
      InlineCode: |
        import json
        def lambda_handler(event, context):
          return {
            "statusCode": 200,
            "body": {},
          }
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /tasks/{id}
            Method: delete
