AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Simple Task Manager API

# ------------------------------------------------------------
# Globals section
# ------------------------------------------------------------
Globals:
  Function:
    Runtime: python3.7
    Timeout: 200
#    Environment:
#      Variables:
#        TABLE_NAME: data-table

# ------------------------------------------------------------
# Resources section
# ------------------------------------------------------------
Resources:
  # API Gateway
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: simple-task-manager-api
      StageName: prd
      EndpointConfiguration: REGIONAL
      Cors:
        AllowMethods: "'POST,GET,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
#      Domain:
#        DomainName: www.my-domain.com
#        CertificateArn: my-valid-cert-arn
#        EndpointConfiguration: EDGE

  # Lambda Function
  GetTasksFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-tasks-function
      Handler: app.get_tasks
      CodeUri: src/tasks
      Layers:
        - !Ref PythonModulesLayer
#        - !Ref PythonLibLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /tasks
            Method: get

  CreateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: create-task-function
      Handler: app.create_task
      CodeUri: src/tasks
      Layers:
        - !Ref PythonModulesLayer
      #        - !Ref PythonLibLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /tasks
            Method: post

  UpdateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: update-task-function
      Handler: app.update_task
      CodeUri: src/tasks
      Layers:
        - !Ref PythonModulesLayer
      #        - !Ref PythonLibLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /tasks/{id}
            Method: put

  DeleteTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: delete-task-function
      Handler: app.delete_task
      CodeUri: src/tasks
      Layers:
        - !Ref PythonModulesLayer
      #        - !Ref PythonLibLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /tasks/{id}
            Method: delete

  PythonModulesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: python-modules-layer
      ContentUri: src/layer/
      CompatibleRuntimes:
        - python3.7
      RetentionPolicy: Retain

  # DynamoDB
  DynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: tasks
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
        - AttributeName: date
          AttributeType: N
      KeySchema:
        - AttributeName: name
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
